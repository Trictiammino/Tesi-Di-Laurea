experiment:
  gpu: 1
  #config_test: True

  dataset: artgraph
  data_config:
    strategy: fixed
    train_path: C:/Users/ReadyToUse/PycharmProjects/pythonProject/results/artgraph/splitting/dataset_0-1/train.tsv
    validation_path: C:/Users/ReadyToUse/PycharmProjects/pythonProject/results/artgraph/splitting/dataset_0-1/validation.tsv
    test_path: C:/Users/ReadyToUse/PycharmProjects/pythonProject/results/artgraph/splitting/dataset_0-1/test.tsv
#    dataset_path: data/dataset.tsv

  external_models_path: external/models/__init__.py

  models:
    BPRMF:
      meta:
        hyper_max_evals: 4
        hyper_opt_alg: rand
        save_recs: True
      lr: [ 0.0005, 0.001, 0.005, 0.01 ]
      batch_size: [ 128, 256, 512 ]
      epochs: 30
      bias_regularization: 0
      user_regularization: [ 0.0025, 0.005, 0.01 ]
      positive_item_regularization: [ 0.0025, 0.005, 0.01 ]
      negative_item_regularization: [ 0.00025, 0.0005, 0.001 ]
      update_negative_item_factors: True
      update_users: True
      update_items: True
      update_bias: True

    MultiVAE:
      meta:
        hyper_max_evals: 12
        hyper_opt_alg: tpe
        save_recs: True
      lr: [ 0.0005, 0.001, 0.005, 0.01 ]
      epochs: 20
      batch_size: [ 128, 256, 512 ]
      intermediate_dim: [ 300, 400, 500 ]
      latent_dim: [ 100, 200, 300 ]
      dropout_pkeep: 1
      reg_lambda: [ 0.1, 0.0, 10 ]

    NeuMF:
      meta:
        hyper_max_evals: 2
        hyper_opt_alg: tpe
        save_recs: True
      lr: [ loguniform, -10, -1 ]
      batch_size: [ 128, 256, 512 ]
      epochs: 20
      mf_factors: [ quniform, 8, 32, 1 ]
      mlp_factors: [ 8, 16 ]
      mlp_hidden_size: [ (32, 16, 8), (64, 32, 16) ]
      prob_keep_dropout: 0.2
      is_mf_train: True
      is_mlp_train: True


#    external.MostPop:
#      meta:
#        hyper_max_evals: 5
#        hyper_opt_alg: tpe
#        verbose: True
#        save_recs: True
#        validation_metric: nDCG@10

    Random:
      meta:
        hyper_max_evals: 3
        hyper_opt_alg: random
        verbose: True
        save_recs: True
      seed: 42

    ItemKNN:
      meta:
        hyper_opt_alg: grid
        save_recs: True
      neighbors: [ 5, 10, 15 ]
      similarity: cosine


    FunkSVD:
      meta:
        save_recs: True
      hyper_opt:
        strategy: hyperopt
        max_evals: 10
        space:
          factors:
            - uniform
            - 10
            - 30
          learning_rate:
            - uniform
            - 0.001
            - 0.1
          regularization:
            - uniform
            - 0.001
            - 0.1

  evaluation:
     simple_metrics: [nDCG, ACLT, ARP, Precision,ItemCoverage,EPC,Gini]
  top_k: 3000